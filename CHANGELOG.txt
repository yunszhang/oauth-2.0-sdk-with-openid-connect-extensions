version 1.0 (2012-05-29)
    * First official release with authorisation endpoint, token endpoint, check
      ID endpoint and UserInfo endpoint support.
    * JSON Web Tokens (JWTs) support through the Nimbus-JWT library.
    * Language Tags (RFC 5646) support through the Nimbus-LangTag library.
    * JSON support through the JSON Smart library.

version 2.0 (2013-05-13)
    * Intermediary development release with Maven build, published to
      Maven Central.

version 2.1 (2013-06-06)
    * Updates the APIs to OpenID Connect Messages draft 20, OpenID Connect
      Standard draft 21, OpenID Connect Discovery draft 17 and OpenID
      Connect Registration draft 19.
    * Major refactoring of the APIs for greater simplicity.
    * Adds JUnit tests.

version 2.2 (2013-06-18)
    * Refactors dynamic OpenID Connect client registration.
    * Adds partial support of the OAuth 2.0 Dynamic Client Registration
      Protocol (draft-ietf-oauth-dyn-reg-12).
    * Optimises parsing of request parameters consisting of one or more
      tokens (scope, response type, etc).

version 2.3 (2013-06-19)
    * Renames OAuth 2.0 dynamic client registration package.
    * Adds ClientInformation.getClientMetadata() method.
    * Adds OIDCClientInformation class.

version 2.4 (2013-06-20)
    * Adds static OIDCClientInformation.parse(JSONObject) method.

version 2.5 (2013-06-22)
    * Adds support OAuth 2.0 dynamic client update.
    * Adds OpenID Connect dynamic client registration classes.

version 2.6 (2013-06-25)
    * Enforces order of preference of ACR values in OpenID Connect client
      metadata, as required by the specification.
    * Documentation and performance improvements.

version 2.7 (2013-06-26)
    * Switches Identifier generation to java.security.SecureRandom.

version 2.8 (2013-06-30)
    * Fixes serialisation and assignment bugs in ClientMetadata.
    * Switches Secret generation to java.security.SecureRandom.

version 2.9 (2013-09-17)
    * Changes the licensing terms to Apache 2.0.
    * Updates the APIs to draft-ietf-oauth-dyn-reg-14.
    * Separates the authorisation grant from the token request.
    * Refactors client authentication.
    * Numerous bug fixes and improvements.
    * Upgrades dependencies.

version 2.10 (2013-09-22)
    * Refactors OpenID Connect token response classes.
    * Adds implicit grant type constant.
    * Upgrades Nimbus JOSE+JWT dependency.

version 2.11 (2013-10-07)
    * Adds ClaimsSet.addAll and UseInfo.addAll methods.
    * Adds Audience.toSingleAudienceList method.
    * Renames ACRRequest empty check method.
    * Refactors GeneralException and extending classes.
    * Upgrades Nimbus JOSE+JWT dependency.

version 2.12 (2013-10-21)
    * Refactors ClaimsRequest resolution methods, fixes bugs that affected the
      correct parsing, serialisation and proper  ID token claims redirection.
    * Upgrades Nimbus JOSE+JWT dependency.

version 2.13 (2013-10-21)
    * Adds helper static ClaimsRequest.resolve(ResponseType, Scope,
      ClaimsRequest) method.

version 2.14 (2014-01-14)
    * Renames classes and methods in openid package to reflect terminology
      changes in the latest round of the OpenID Connect drafts.
    * Adds builder to OAuth 2.0 authorisation request and OpenID Connect
      authentication request classes.
    * Fixes fragment encoding of OpenID Connect authentication responses that
      contain an ID token.
    * Adds support for "none" response type value.
    * Fixes URL reconstruction with IPv6 address in HTTPRequest.
    * Adds short-hand methods to Scope and ResponseType classes.
    * Adds support for OpenID Connect registration parameters introduced in the
      latest round of the OpenID Connect drafts.
    * Extends JUnit tests, fixes numerous discovered bugs.

version 2.14.1 (2014-01-14)
    * Upgrades to Nimbus LangTag 1.4.

version 2.14.2 (2014-01-17)
    * Upgrades to Nimbus JOSE+JWT 2.22.1.

version 2.15 (2014-02-10)
    * Adds WWW-Authenticate response header for client error responses.
    * Refactors BearerAccessToken parsing from HTTP request.

version 2.15.1 (2014-02-11)
    * Fixes HTTPRequest.send throwing IOException on 4xx status code.

version 2.15.2 (2014-02-12)
    * Fixes content retrieval in HTTPRequest.send for HTTP 4xx errors.
    * Token error parsing supports general HTTP error codes.
    * TokenErrorResponse.toHTTPRequest can now handle null error objects.

version 2.15.3 (2014-03-08)
    * Ensures case insensitive comparison of access token types.
    * Updates the OpenID Connect specification references to the final 1.0
      release from 2014-02-25.

version 3.0 (2014-03-27)
    * Replaces java.net.URL representations with java.net.URI where URL is not
      directly required (see issues 79 and 80).

version 3.0.1 (2014-04-08)
    * Upgrades Nimbus JOSE + JWT dependency to 2.24.
    * Upgrades Apache Commons Lang dependency to 3.3.1.
    * Upgrades Apache Commons Codec dependency to 1.9.

version 3.0.2 (2014-04-23)
    * Upgrades Nimbus JOSE + JWT dependency to 2.25.

version 3.1 (2014-04-24)
    * Adds static ClientAuthenticationMethod.parse(String) method.

version 3.2 (2014-04-28)
    * Upgrades source and compile target to Java 7.
    * Fixes NullPointerException in OIDCProviderMetadata.toJSONObject() method.

version 3.3 (2014-06-10)
    * Upgrades OAuth 2.0 client registration to draft-ietf-oauth-dyn-reg-17
      and draft-ietf-oauth-dyn-reg-management-01, adds support for software
      statements.
    * Upgrades Nimbus JOSE + JWT dependency to 2.26.
    * Fixes affecting HTTP POST parameter parsing.
    * Corrects return type of AuthenticationRequest.parse(HTTPRequest)
      (issue #83).

version 3.4 (2014-07-16)
    * Upgrades OAuth 2.0 client registration to draft-ietf-oauth-dyn-reg-18 and
      draft-ietf-oauth-dyn-reg-management-02.
    * Upgrades Nimbus JOSE + JWT dependency to 2.26.1.
    * Adds TokenEncoding and ClaimsTransport enumerations.
    * Fixes ClientInformation serialisation and parsing of the
      client_secret_expires_at parameter when set to zero (issues #92 and #94).

version 3.4.1 (2014-07-21)
    * Serialises zero client_secret_expires_at as long instead of int.

version 4.0 (2014-08-24)
    * Adds support for OAuth 2.0 token revocation requests (RFC 7009).
    * Adds support for JWT bearer assertion grant.
    * Adds support for SAML 2.0 bearer assertion grant.
    * Refactors TokenRequest and AuthorizationGrant classes.
    * Adds support for HTTP request connect and read timeouts.
    * Adds support for custom parameters in AccessTokenResponse.
    * Hardens claims parsing IDTokenClaimsSet.
    * Upgrades Nimbus JOSE+JWT dependency to 3.1.1.

version 4.1 (2014-08-25)
    * Identifier implements java.io.Serializable.
    * Adds getState() and getRedirectionURI() to AuthenticationResponse
      interface.

version 4.2 (2014-08-27)
    * Modifies IDTokenClaimsSet constructor to accept ReadOnlyJWTClaimsSet
      argument (issue #99).

version 4.3 (2014-08-28)
    * Fixes GrantType.parse(String) bug that resulted in treating "implicit" as
      unsupported grant type.
    * Adds simpler TokenRequest constructors without a Scope parameter.

version 4.4 (2014-09-02)
    * Upgrades OAuth 2.0 client registration to draft-ietf-oauth-dyn-reg-20 and
      draft-ietf-oauth-dyn-reg-management-04.
    * Upgrades Nimbus JOSE+JWT dependency to 3.1.2.

version 4.4.1 (2014-09-10)
    * Prevents JSON serialisation of default OpenID Connect client registration
      "require_auth_time" values.

version 4.4.2 (2014-09-16)
    * Fixes serialisation of TokenRequest with client_secret_post client
      authentication (issue #104).

version 4.4.3 (2014-09-19)
    * Removes final from AuthorizationGrant classes.
    * Removes final from OIDCAccessTokenResponse class.

version 4.5 (2014-09-19)
    * Adds default public constructor to GrantType class, unbounds its static
      parse method.

version 4.6 (2014-11-04)
    * HTTPResponse Location header switches from URL to URI representation
      (issue #109).
    * Fixes NullPointerException in HTTPRequest.send on empty error stream
      (issue #110).
    * Adds additional information to ParseException thrown by
      HTTPResponse.ensureStatusCode.
    * Upgrades Nimbus JOSE+JWT dependency to 3.2.1.

version 4.7 (2014-11-10)
    * Adds support for OpenID Connect session logout requests.
    * Adds support for Accept HTTP request header.
    * Upgrades Apache Commons Lang dependency to 3.3.2.
    * Upgrades to Apache Commons Codec dependency to 1.10.

version 4.7.1 (2014-11-11)
    * Upgrades Nimbus JOSE+JWT dependency to 3.2.2.

version 4.8 (2014-11-20)
    * Adds new ClientCredentialsParser class.
    * Fixes OIDCClientInformation parsing of secrets with no expiration (iss
      #117).
    * Adds missing shadow methods to BearerTokenError (iss #116).
    * Upgrades Nimbus JOSE+JWT dependency to 3.4.

version 4.8.1 (2014-12-14)
    * Upgrades Nimbus JOSE+JWT dependency to 3.5.

version 4.8.2 (2015-01-12)
    * Upgrades Nimbus JOSE+JWT dependency to 3.6.

version 4.8.3 (2015-01-15)
    * Upgrades Nimbus JOSE+JWT dependency to 3.7.

version 4.8.4 (2015-02-03)
    * Renames OIDCProviderMetadata methods to match established convention.
    * Adds missing static AuthenticationRequest.parse(URI) method.

version 4.8.5 (2015-02-04)
    * Refines AuthorizationRequest.parse error reporting.
    * Refines AuthenticationRequest.parse error reporting.
    * Refines TokenRequest.parse error reporting.

version 4.9 (2015-02-18)
    * Add convenience Response.indicatesSuccess method.
    * Add convenience HTTPResponse.indicatesSuccess method.
    * Fixes UserInfoErrorResponse.parse bug.

version 4.10 (2015-02-23)
    * Adds support for session_state in OpenID Connect authentication response.

version 4.11 (2015-03-05)
    * Adds optional HTTPRequest entity body length limit to guard against DoS
      attacks.

version 4.12 (2015-03-14)
    * HTTPRequest adds support for arbitrary headers.
    * HTTPResponse adds support for arbitrary headers.

version 4.12.1 (2015-03-16)
    * Upgrades to Nimbus JOSE+JWT 3.9.2.
    * Upgrades to JSON Smart 1.3.1.

version 4.13 (2015-04-07)
    * Adds HTTPResponse.getContentAsJSONArray() method (iss #123).
    * Adds JSONArrayUtils class (iss #123).
    * Adds AccessTokenResponse.getBearerAccessToken() method (iss #124).
    * Renames JSONObjectUtils.parseJSONObject() to parse().
    * Renames JSONArrayUtils.parseJSONArray() to parse().
    * Fixes EncryptionMethod parsing in OIDCClientMetadata (iss #127).

version 4.14 (2015-07-07)
    * Adds support for response_mode authorisation request parameter (iss #53).
    * Permits redirect_uri in request_object / request_uri of OpenID Connect
      authentication request (iss #113).
    * Adds response_mode field to GeneralException.
    * Improves AuthorizationRequest.impliesCodeFlow and impliesImplicitFlow
      logic.
    * Refactors HTTP code to enable use of the SDK in web servers that are not
      servlet based (iss #133); the servlet API dependency is made optional.
    * Preserves HTTP header name case (iss #131).

version 4.14.1 (2015-07-07)
    * Restores JSONObjectUtils.parseJSONObject alias parse, marked deprecated.

version 4.14.2 (2015-07-30)
    * Fixes URL serialisation of redirect_uri with query component in OAuth 2.0
      authorisation responses and OpenID authentication responses (iss #140).

version 4.14.3 (2015-08-17)
    * Permits empty or null client_secret values (form POST) in unauthenticated
      token requests (iss #141).

version 4.15 (2015-08-18)
    * Adds HTTPRequest ability to control follow / not follow HTTP 3xx
      redirections.

version 4.16 (2015-08-26)
     * Adds static AccessTokenHash.isRequiredInIDTokenClaims and
       CodeHash.isRequiredInIDTokenClaims methods. Intended for OP to determine
       when to add c_hash and at_hash claim to ID token claims set based on
       the requested response_type (iss #144).
     * Adds convenience ClaimsRequest.parse(String) method.
     * Fixes checks in IDTokenClaimsSet.hasRequiredClaims (iss #132).
       Introduces second method parameter to indicate the issue endpoint of the
       ID token (authz endpoint / token endpoint) which is required for hybrid
       flow checks.
     * Updates specification references to RFC 7521, RFC 7522, RFC 7523, RFC
       7591 and RFC 7592.

version 5.0-alpha1 (2015-08-28)
     * Refactors OAuth 2.0 and OpenID Connect token response classes. Renames
       TokenPair class to Tokens and adds JSON serialisation and parsing
       methods. Extends Tokens with new OIDCTokens to handle ID tokens. Renames
       OIDCAccessTokenResponse class to OICTokenResponse and makes ID token
       presence mandatory. Moves token getters to Tokens / OIDCTokens class.
       Makes BearerAccessToken cast safe.
     * Makes SerializeException unchecked.
     * Upgrades to Nimbus JOSE+JWT 4.0.
     * Upgrades to Apache Commons Lang 3.4.

version 5.0-alpha2 (2015-09-02)
     * Fixes parsing of AuthorizationRequest, AuthorizationResponse,
       AuthenticationRequest and LogoutRequest URIs with URL-encoded special
       characters in the parameter values (iss #147).
     * Adds ClaimsSet.putAll(Map<String,Object) method (iss #146).

version 5.0-alpha3 (2015-09-27)
     * Closes nimbus-jose-jwt dep range exclusively to work around Ivy range
       handling (iss #148).

version 5.0-alpha4 (2015-09-29)
     * Adds extended ClientSecretJWT and PrivateKeyJWT constructors which
       provide for JWT claims set and signing (iss #150).
     * Fixes NPE in JWTAuthenticationClaimsSet.toJWTClaimsSet.

version 5.0-alpha5 (2015-09-30)
    * Adds generic framework for client authentication verification.
    * Removes Apache Commons Codec dependency, switches to Nimbus JOSE+JWT
      for BASE64 and BASE64 URL-safe encoding and decoding.

version 5.0-alpha6 (2015-10-06)
    * Fixes parsing of custom response headers in HTTPRequest.send (iss #153).

version 5.0-alpha7 (2015-10-20)
    * Factors out JWTAssertionClaimsSet into assertions.jwt package.
    * Factors out JWTAssertionClaimsSetVerifier into assertions.jwt package.
    * Adds JWTAssertionClaimsSet support for multiple audiences.
    * Adds JWTBearerGrant checks to reject unsecured JWT assertions or
      JWT assertion in a state that cannot be serialised.
    * Moves token_endpoint_auth_signing_alg field from OIDCClientMetadata to
      ClientMetadata to enable its use by generic OAuth 2.0 clients.
    * Adds HostnameVerifier and SSLSocketFactory support to HTTPRequest (iss
      #149).
    * Adds static Audience utilities.
    * Adds convenience Audience(URI) and Audience(Identifier) constructors.
    * Adds convenience Issuer(URI) and Issuer(Identifier) constructors.
    * Adds convenience ClientID(Identifier) constructor.
    * Adds Scope copy constructor.
    * Upgrades to Nimbus JOSE+JWT 4.3.
    * Fixes missing software_id copy in ClientMetadata copy constructor.
    * Fixes missing software_version copy in ClientMetadata copy constructor.

version 5.0-alpha8 (2015-10-20)
    * Caches exceptions emitted by JWTAssertionClaimsSetVerifier.
    * Caches exceptions emitted by JWTAuthenticationClaimsSetVerifier.

version 5.0-alpha9 (2015-10-30)
    * Adds GeneralException(ErrorObject) constructor.

version 5.0-alpha10 (2015-11-09)
    * Adds Audience.create(String[]) static helper.
    * Adds Audience.matchesAny(Collection<Audience>,Collection<Audience>)
      static helper.

version 5.0-alpha11 (2015-11-10)
    * Adds support for nested (JWS-signed then JWE-encrypted) JWT bearer
      assertions.

version 5.0-alpha12 (2015-11-25)
    * Implements OAuth 2.0 token introspection (RFC 7662) request and response
      classes.
    * Adds OIDCProviderMetadata support for custom (not registered) parameters.
    * Adds helper ClientMetadata.hasScopeValue method.

version 5.0-alpha13 (2015-12-02)
    * Adds IDTokenVerifier.
    * Adds JWSVerificationKeySelector for verifying JWS objects in OpenID
      Connect.
    * Adds JWEDecryptionKeySelector for decrypting JWE objects in OpenID
      Connect.
    * Adds JWKSource interface with client secret, local JWK set and remote
      JWK set implementations.
    * Moves Resource, ResourceRetriever and DefaultResourceRetriever to http
      package.
    * Creates RestrictedResourceRetriever interface which permits setting of
      HTTP connection timeout, HTTP read timeout and HTTP entity size limit.
    * Lets DefaultResourceRetriever implement RestrictedResourceRetriever.

version 5.0-alpha14 (2015-12-08)
    * Fixes cache update bug in RemoteJWKSet.
    * Simplifies JWEDecryptionKeySelector.
    * Updates ImmutableClientSecret and ImmutableJWKSet.
    * Modifies KeyConverter.toJavaKeys to include private keys.
    * Upgrades to Nimbus JOSE+JWT 4.10.

version 5.0-alpha15 (2015-12-08)
    * Adds clock skew support to IDTokenVerifier and IDTokenClaimsVerifier.

version 5.0 (2015-12-15)
    * Adds SAML 2.0 assertion package with simple factory and validator.
    * Renames IDTokenVerifier to IDTokenValidator to fix terminology and
      compliance with spec.
    * Makes IDTokenValidator ClockSkewAware.
    * Adds AccessTokenValidator (at_hash).
    * Adds AuthorizationCodeValidator (c_hash).
    * Refactors AuthenticationRequestResolver for new JWT processor framework.
    * Removes obsolete JWTDecoder interface and default implementation.
    * Adds AMR constants from draft-jones-oauth-amr-values-02.
    * AuthenticationRequest no longer parses unspecified display as default
      "page".
    * Upgrades to Nimbus JOSE+JWT 4.11.

version 5.1 (2015-12-17)
    * Lets SAML2AssertionValidator accept java.security.Key instances.

version 5.1.1 (2016-01-07)
    * Fixes NPE in SAML2AssertionValidator.validate on missing XML signature.

version 5.2 (2016-01-28)
    * Adds support for Proof Key for Code Exchange by OAuth Public Clients (RFC
      7636).
    * Adds code_challenge_methods_supported to OIDCProviderMetadata.
    * Adds public client support to TokenRevocationRequest (iss #164).
    * ClientMetadata.applyDefaults set token_endpoint_auth_method to 'none' for
      implicit authorisation grant (iss #163).
    * Overrides equals and hashCode for AuthorizationCodeGrant.
    * Overrides equals and hashCode for ResourceOwnerPasswordCredentialsGrant.
    * Overrides equals and hashCode for RefreshTokenGrant.
    * Overrides equals and hashCode for SAML2BearerGrant.
    * Fixes authorisation response JavaDocs concerning use of relative callback
      URIs (iss #162).

version 5.3 (2016-01-29)
    * Adds ClientInformation.inferType method to deduce whether a client is
      confidential or public, based on the token endpoint authentication method
      and the presence of key material.
    * Moves ClientType enum to client package.

version 5.4 (2016-01-29)
    * Restores non-PKCE AuthorizationRequest constructor.

version 5.5 (2016-02-04)
    * Adds an Actor class to represent the authorised actor in impersonation
      and delegation cases (draft-ietf-oauth-token-exchange-03).

version 5.5.1 (2016-02-14)
    * Permits unencoded equals '=' characters in parameter values passed to
      URLUtils.parseParameters (iss #169).

version 5.5.2 (2016-02-18)
    * Allows socket caching in HTTPRequest.send method.

version 5.6 (2016-04-07)
    * Adds support for custom TokenRequest parameters (iss #171).
    * Fixes key selection bug in static factory method IDTokenValidator.create
      (iss #173).
    * Adds support for OSGi bundling in pom.xml.
    * Upgrades minimal dependency to Nimbus JOSE+JWT 4.13.1.

version 5.7 (2016-04-12)
    * Switches to the new Nimbus JOSE+JWT facilities (introduced in v4.14) for
      JSON Web Key (JWK) sourcing and key selection. The classes in the
      com.nimbusds.oauth2.sdk.jose.jwk package are deprecated.
    * Adds new IDTokenValidator constructor to permit setting of a specific
      resource retriever (HTTP client) for obtaining the OpenID Connect JWK
      set.
    * Upgrades to Nimbus JOSE+JWT 4.16.

version 5.8 (2016-04-21)
    * Adds support for custom OAuth 2.0 authorization request parameters.
    * Adds support for custom OpenID Connect authentication request parameters.

version 5.8.1 (2016-04-28)
    * Removes direct dependencies on commons-lang:commons-lang:2.6 (iss #179).

version 5.8.2 (2016-05-24)
    * ServletUtils.createHTTPRequest recreates HTTP request body on
      Content-Type application/x-www-form-urlencoded if stripped by the servlet
      container (iss #184).

version 5.9 (2016-05-26)
    * Modifies the Secret class to permit empty values (empty passwords allowed
      by the HTTP basic authentication specification, see RFC 2617, section 2)
      (iss #182).
    * Switches to an alternative JCIP annotation dependency under the Apache
      License, version 2.0. The original JCIP annotation package has a Creative
      Commons which is not recommended for licensing software, see
      https://creativecommons.org/faq/ .
    * Adds Maven profile for building a Java 1.6 compatible JAR package (issue
      #183).

version 5.9.1 (2016-05-27)
    * Refactors ServletUtils.createHTTPRequest for HTTP POST and PUT requests
      with Content-Type application/x-www-form-urlencoded to construct the
      HTTPRequest entity body from ServletRequest.getParameterMap() (issue
      #186).

version 5.10 (2016-05-30)
    * Refactors the sector and pairwise subject identifier framework. Adds new
      SectorID class. Adds new AES/CBC/PKCS5Padding based encoder / decoder of
      pairwise subject identifiers. Adds new SectorIDURIValidator class.
    * Adds https schema and host checks to the OIDCClientMetadata
      sector_identifier_uri setter.
    * Adds new OIDCClientMetadata.resolveSectorID method.
    * Adds new JSONArrayUtils.toStringList method.
    * Adds new JSONArrayUtils.toURIList method.
    * Adds URI fragment check to ClientMetadata redirect_uri setters (issue
      #188).
    * Includes appropriate registration error on ParseExceptions thrown by
      ClientMetadata.parse and OIDCClientMetadata.parse to aid server-side
      error reporting.

version 5.10.1 (2016-06-16)
    * Fixes NPE in TokenIntrospectionSuccessResponse when "iss" is not
      "iat" not (pull request 12).

version 5.11 (2016-07-11)
    * Updates the OpenID AuthenticationRequest class to treat max_age=0 as
      indicating prompt to (re)authenticate the end-user (equivalent to
      prompt=login. An unspecified max_age is now denoted by -1 (previously 0).
      See OpenID Connect WG issue #993 (iss #180).
    * Refactors the com.nimbusds.oauth2.sdk.auth.verifier package to support
      private_key_jwt authentication where the OAuth 2.0 client has registered
      a remote JWK set (jwks_uri) (iss #191).
    * Nimbus JOSE+JWT v4.22 becomes the minimum dependency.

version 5.12 (2016-07-14)
    * Lets InvalidClientException extend GeneralException.

version 5.13 (2016-07-14)
    * Fixes OIDCClientMetadata default_max_age to use -1 to signify an
      unspecified value (in line with the max_age OpenID authentication request
      parameter) (iss #180).

version 5.14 (2016-08-17)
    * Adds new SecretKeyDerivation utility for deriving symmetric AES keys from
      client secrets. Required for encrypting ID tokens and UserInfo JWTs with
      a symmetric JWE algorithm. See OpenID Connect Core 1.0, section 10.2.
    * Rewrites the invalid_request_uri and invalid_request_object error
      descriptions.

version 5.15 (2016-08-19)
    * Introduces new SIVAESBasedPairwiseSubjectCodec based on SIV AES (RFC
      5297).
    * Deprecates AESBasedPairwiseSubjectCodec.

version 5.16 (2016-08-25)
    * Adds UserInfoErrorResponse support for representing general errors.
    * Upgrades minimal dependency to Nimbus JOSE+JWT 4.25.

version 5.16.1 (2016-08-26)
    * Upgrades to LangTag 1.4.1.

version 5.17 (2016-08-30)
    * OIDCProviderMetadata adds support for draft-ietf-oauth-discovery-04.
    * OIDCProviderMetadata.toJSONObject outputs members in order.
    * Adds new OrderedJSONObject utility class.

version 5.17.1 (2016-09-12)
    * Adds copyright and licence notice to source files.
    * Upgrades to Nimbus JOSE+JWT 4.26.1+
    * Upgrades to LangTag 1.4.3+

version 5.17.2 (2016-10-27)
    * Upgrades AES SIV mode lib minimal dependency to 1.1.1 (after Tim McClean
      sec audit and updates).

version 5.17.3 (2016-11-03)
    * Fixes parsing of unquoted error code in WWW-Authenticate headers (issue
      #197).

version 5.17.4 (2016-11-04)
    * Fixes missing OIDCClientMetadata override of
      ClientMetadata.toJSONObject(boolean) (iss #198).

version 5.17.5 (2016-11-06)
    * Permits parsing of null JSON object member values in client metadata.

version 5.17.6 (2016-11-06)
    * Permits parsing of null JSON object member values in OpenID provider
      metadata.

version 5.18 (2016-11-19)
    * Deprecates use of javax.mail.internet.InternetAddress (iss #195).

version 5.18.1 (2016-11-29)
    * Fixes NPE in ClientMetadata.setContacts when the argument is null.
    * Fixes NPE in ClientMetadata.getContacts when a contacts String list item
      is null.
    * Upgrades to Nimbus JOSE+JWT 4.29.

version 5.19 (2016-12-13)
    * Produces more informative parse exceptions on malformed client secret
      basic and client secret post authentication (iss #201).

version 5.19.1 (2016-12-15)
    * Includes  RFC 6749, section 2.3.1 reference in parse exceptions on
      malformed client secret basic authentication (iss #201).

version 5.19.2 (2016-12-15)
    * Appends detailed description in OAuth 2.0 error object on malformed
      client secret basic authentication (iss #201).

version 5.20 (2016-12-28)
    * Refactors the AuthorizationRequest and the AuthenticationRequest builder
      API to prevent incorrect use of the PKCE code challenge (iss #202).
    * Makes the CodeChallenge constructor private, adds static parse method to
      recreate the code challenge from a string value on the server side (iss
      #202).

version 5.21 (2017-01-18)
    * Updates TokenRequest.parse(HTTP request) to produce an invalid request
      error if multiple client authentication methods are found in the request
      (iss #203).
    * Details InvalidClientException message on bad / expired JWT claims when
      JWT authentication is verified (iss #204).

version 5.22 (2017-02-06)
    * Adds HTTPResponse.getStatusMessage and setStatusMessage methods.
    * Fixes side effect in TokenResponse.parse(JSONObject) which caused removal
      of the standard token parameters from the JSON object (iss #206).

version 5.22.1 (2017-02-17)
    * Relaxes id_token_hint requirement in RP-initiated OpenID Connect
      LogoutRequest (iss #207).

version 5.22.2 (2017-02-27)
    * Fixes parsing of client secret basic authentication with illegal
      application/x-www-form-urlencoded encoding (iss #208).

version 5.23 (2017-03-05)
    * Adds new ACRRequest.applyDefaultACRs method.
    * Adds new ensureACRSupport method.

version 5.24 (2017-03-08)
    * Adds ClaimsRequest support for resolving custom claims.

version 5.24.1 (2017-03-28)
    * Fixes NPE in ServletUtils.createHTTPRequest (iss #211).

version 5.24.2 (2017-04-02)
    * Parses JOSE algorithms in OP, client and RP metadata by reference (iss
      #212).

version 5.25 (2017-04-11)
    * Adds support for OpenID Connect Front-Channel Logout 1.0 (draft 02).
    * Adds support for OpenID Connect Back-Channel Logout 1.0 (draft 04).
    * Upgraded JSON Smart dependency to support version range from 1.3.1 to
      2.3.

version 5.26 (2017-04-26)
    * Switches to constant time comparison of
      com.nimbusds.oauth2.sdk.auth.Secret (iss #215).
    * Adds new com.nimbusds.oauth2.sdk.auth.Secret.getSHA256 method.
    * Switches to constant time SHA-256 based comparison of client_secret's in
      com.nimbusds.oauth2.sdk.auth.verifier.ClientAuthenticationVerifier (iss
      #215).
    * Upgrades minimal Nimbus JOSE+JWT dependency to 4.37.

version 5.27 (2017-06-02)
    * Adds new OIDCProviderMetadata.resolve(Issuer) methods for downloading an
      OpenID provider's metadata by using the issuer identifier as a starting
      point to resolve the configuration endpoint URL.
    * Adds new static IDTokenValidator.create(Issuer, OIDCClientInformation)
      methods for creating an ID token validator from an OpenID provider's
      issuer identifier and a Relying Party's client registration.

version 5.27.1 (2017-06-16)
    * Ensures the InputStreamReader in HTTPRequest and the deprecated
      DefaultResourceRetriever use UTF-8 as the charset at all times (iss
      #216).

version 5.28 (2017-06-20)
    * Supports all Authentication Method References (AMR) defined in RFC 8176.

version 5.29 (2017-06-29)
    * Adds copy constructor to AuthorizationRequest.Builder.
    * Adds copy constructor to AuthenticationRequest.Builder.

version 5.30 (2017-07-07)
    * Adds UserInfo support for aggregated and distributed claims.

version 5.31 (2017-07-26)
    * Adds new StateHash class to represent state hash claims (s_hash) in ID
      tokens, see Financial Services – Financial API - Part 2: Read and Write
      API Security Profile.
    * Adds StateHash getter and setter to IDTokenClaimsSet.
    * Adds new TLSClientAuthentication class for handling tls_client_auth
      client authentication, see draft-ietf-oauth-mtls-02.
    * Updates the ClientCredentialsSelector interface to support
      tls_client_auth client authentication.
    * Adds TokenIntrospectionSuccessResponse support for the cnf.x5t#S256 claim
      used for mutual TLS sender constrained access tokens, see
      draft-ietf-oauth-mtls-02.
    * Upgrades minimal Nimbus JOSE+JWT dependency to 4.40.

version 5.32 (2017-07-27)
    * Adds new StateValidator for validating the integrity of the state
      parameter in OpenID authentication requests by means of the optional
      s_hash ID token claim.

version 5.33 (2017-07-29)
    * Updates implementation of Mutual TLS Profile for OAuth 2.0 to
      draft-ietf-oauth-mtls-03.
    * Adds support for mutual_tls_sender_constrained_access_tokens
      authorisation server metadata field.
    * Adds support for mutual_tls_sender_constrained_access_tokens client
      metadata field.
    * Adds support for tls_client_auth_subject_dn client metadata field.
    * Adds support for tls_client_auth_root_dn client metadata field.

version 5.34 (2017-07-31)
    * Adds new ClientX509CertificateBindingVerifier interface for verifying
      that the subject and root issuer of a client X.509 certificate submitted
      during successful mutual TLS authentication (in tls_client_auth) match
      the registered tls_client_auth_subject_dn and tls_client_auth_root_dn
      values for the submitted client ID.
    * Extends ClientAuthenticationVerifier to support PKI-bound
      tls_client_auth.
    * Refactors TLSClientAuthentication and PublicKeyTLSClientAuthentication
      for draft-ietf-oauth-mtls-03.
    * Adds X.509 client certificate subject DN and root DN getters / setters
      to HTTPRequest.

version 5.34.1 (2017-08-02)
    * Fixes missing setting of the client_id parameter in the token request
      body when PKI bound or public key bound TLS client authentication is
      used.

version 5.34.2 (2017-08-02)
    * Fixes bug in PublicKeyTLSClientAuthentication(ClientID,X509Certificate)
      constructor.

version 5.35 (2017-08-16)
    * Adds shorthand ClientMetadata.getRedirectionURI method for getting a
      single redirection URI.

version 5.36 (2017-08-29)
    * Removes tls_client_auth_root_dn OAuth 2.0 client registration parameter
      (in anticipation of draft-ietf-oauth-mtls-04).
    * Upgrades minimal Nimbus JOSE+JWT dependency to 5.0+.

version 5.36.1 (2017-10-03)
    * Updates JavaDocs to state that the AuthorizationErrorResponse and the
      AuthenticationErrorResponse classes are intended only for error
      conditions which are allowed to be relayed back to the requesting OAuth
      2.0 client / OpenID relying party (iss #222).

version 5.37 (2017-10-07)
    * Adds HTTPMessage.getClientIPAddress and setClientIPAddress methods.
    * ServletUtils.createHTTPRequest extracts the client IP address from the
      ServletRequest.getRemoteAddr method.

version 5.38 (2017-10-09)
    * Adds new ResponseType.impliesHybridFlow method to check if a given
      response_type implies an OpenID Connect hybrid flow.
    * Fixes ResponseType.impliesImplicitFlow for OpenID Connect response types
      (iss #220).

version 5.39 (2017-10-29)
    * Updates self-signed TLS / X.509 certificate client authentication to
      draft-ietf-oauth-mtls-04.
    * Fixes AuthenticationRequest.parse to throw a ParseException instead of an
      IllegalArgument exception if the parsed hybrid request is missing the
      required "nonce" parameter (iss #225).

version 5.40 (2017-10-30)
    * ClientMetadata overrides toString to return a JSON object string
      representation of itself.
    * OIDCProviderMetadata overrides toString to return a JSON object string
      representation of itself.

version 5.41 (2017-11-06)
    * Adds BearerAccessToken.parse(Map<String,String>) method for pasing
      bearer access tokens from query and form parameters.
    * Improves the exception message on missing access token parameter in
      BearerAccessToken.parse(<String,String>).

version 5.41.1 (2017-11-09)
    * Adds detailed "error_description" on OAuth 2.0 grant parsing errors.

version 5.42 (2017-12-18)
    * Adds ACRRequest.ensureACRSupport(AuthenticationRequest, List<ACR>),
      deprecates ACRRequest.ensureACRSupport(AuthenticationRequest,
      OIDCProviderMetadata).

version 5.43 (2017-12-19)
    * JWTAssertionDetailsVerifier overrides verify(JWTClaimsSet,
      SecurityContext) instead of verify(JWTClaimsSet) which may cause claims
      verification to be missed by the DefaultJWTProcessor.

version 5.44 (2017-12-25)
    * Adds AuthorizationResponse.toSuccessResponse() and toErrorResponse()
    * Adds AuthenticationResponse.toSuccessResponse() and toErrorResponse()
      methods.
    * Adds TokenResponse.toSuccessResponse() and toErrorResponse() methods.
    * Adds OIDCTokenResponse.toSuccessResponse() method.
    * Adds UserInfoResponse.toSuccessResponse() and toErrorResponse() methods.
    * Adds ClientRegistrationResponse.toSuccessResponse() and toErrorResponse()
      methods.

version 5.45 (2018-01-01)
    * Adds new OIDCProviderConfigurationRequest class for representing OpenID
      OpenID provider configuration requests.
    * Adds URIUtils.removeTrailingSlash(URI) method.
    * Upgrades to org.apache.commons:commons-lang3:3.7.

version 5.46 (2018-02-04)
    * Updates the SDK to draft-ietf-oauth-mtls-07.
    * Adds new X509CertificateConfirmation class for use in mutual TLS client
      client authentication and certificate-bound access tokens.

version 5.47 (2018-02-04)
    * Adds X509CertificateConfirmation.toJWTClaim method.

version 5.48 (2018-02-09)
    * Adds TokenIntrospectionSuccessResponse.Builder copy constructor.
    * Adds TokenIntrospectionSuccessResponse.getParameters method.
    * Adds TokenIntrospectionSuccessResponse.getStringParameter method.
    * Adds TokenIntrospectionSuccessResponse.getBooleanParameter method.
    * Adds TokenIntrospectionSuccessResponse.getNumberParameter method.
    * Adds TokenIntrospectionSuccessResponse.getStringListParameter method.
    * Adds TokenIntrospectionSuccessResponse.getJSONObjectParameter method.

version 5.49 (2018-02-14)
    * Adds static X509CertificateConfirmation.of(X509Certificate) method.

version 5.50 (2018-02-14)
    * Adds X509CertificateConfirmation.applyTo(JWTClaimsSet) method.
    * Adds static X509CertificateConfirmation.parse(JSONObject) method.
    * Adds static
      X509CertificateConfirmation.parseFromConfirmationJSONObject(JSONObject)
      method.

version 5.51 (2018-02-14)
    * Refactors X509CertificateConfirmation.parse(JSONObject) to avoid
      unnecessary ParseException.

version 5.52 (2018-02-14)
    * BearerAccessToken no longer final, permits extension.

version 5.53 (2018-02-20)
    * Overrides Actor.toString() with toJSONString().
    * Overrides X509CertificateConfirmation.toString() with
      toJSONObject().toJSONString().

version 5.54 (2018-02-23)
    * Updates TokenIntrospectionSuccessResponse to use new
      X509CertificateConfirmation, deprecates old methods.

version 5.55 (2018-03-03)
    * Updates KeyConverter to reflect AsymmetricJWK interface name change in
      Nimbus JOSE+JWT 5.5 (iss #235).

version 5.56 (2018-03-05)
    * Adds UserInfo.getIssuer() and setIssuer(Issuer) methods.
    * Adds UserInfo.getAudience(), setAudience(Audience), and
      setAudience(List<Audience>) methods.
    * Updates the constructor of BearerTokenError to reject error code, error
      description and scope arguments with invalid characters. See RFC 6750,
      section 3.
    * Updates BearerTokenError parsing of WWW-Authenticate to ignore invalid
      error_uri parameters (the URI syntax exception is swallowed).
    * Fixes parsing in BearerTokenError of WWW-Authenticate headers with
      escaped double quotes in the realm parameter.
    * Updates PairwiseSubjectCodec.decode to return Map.Entry instead of Pair
      (breaking change) (iss #231).
    * Removes Apache Commons Lang 3 dependency (iss #231).
    * Removes Apache Commons Collections 4 dependency (iss #232).
    * Bumps Nimbus JOSE+JWT dependency to 5.5+.

version 5.57 (2018-03-22)
    * Adds new URIUtils.stripQueryString method.
    * Fixes AuthorizationRequest and AuthenticationRequest serialisation of
      query parameters in the authorisation endpoint URI (iss #237).

version 5.58 (2018-04-22)
    * Adds new AuthorizationServerMetadata class for representing OAuth 2.0
      Authorisation Server (AS) metadata, see draft-ietf-oauth-discovery-10
      (iss #166).

version 5.59 (2018-04-22)
    * Refactors ACRRequest to enable ACR support checks with OAuth 2.0
      authorisation servers in addition to OpenID providers.

version 5.60 (2018-04-22)
    * Refactors ACRRequest.resolve to accept plain OAuth 2.0 authorisation
      requests.

version 5.61 (2018-04-24)
    * Updates the ClaimsRequest.resolve methods to support plain OAuth 2.0
      authorisation requests.

version 5.62 (2018-05-14)
    * Updates ClientMetadata for draft-ietf-oauth-mtls-08 where the
      mutual_tls_sender_constrained_access_tokens metadata field is renamed to
      tls_client_certificate_bound_access_tokens. Introduces new getter and
      setter, deprecates the old ones (iss #244).
    * Updates AuthorizationServerMetadata for draft-ietf-oauth-mtls-08 where
      the mutual_tls_sender_constrained_access_tokens metadata field is renamed
      to tls_client_certificate_bound_access_tokens. Introduces new getter and
      setter, deprecates the old ones (iss #244).
    * Allows OpenID Connect token responses without an ID token, which may
      occur in token responses to a refresh token grant where the OpenID
      Provider may not issue an ID token (iss #243).

version 5.63 (2018-07-05)
    * Fixes missing default setting of token_endpoint_auth_methods_supported to
      [ "client_secret_basic" ] in AuthorizationServerMetadata.applyDefaults
      (iss #248).
    * Updates reference to OAuth 2.0 Authorization Server Metadata (RFC 8414).

version 5.64 (2018-07-13)
    * Adds Java 6, 7, 8 and 10 build profiles (iss #247).

version 5.64.1 (2018-07-16)
    * Previous release signed with expired GPG key, repeat release with new
      GPG key.

version 5.64.2 (2018-07-18)
    * Fixes pom.xml to include JAR classifies for new build profiles.

version 5.64.3 (2018-08-07)
    * Updates javax Mail API dependency to 1.6.1 (iss #251).

version 5.64.4 (2018-08-20)
    * Removes redundant javax.mail:javax.mail-api:1.6.1 dependency, API
      definition is included in the com.sun.mail:javax.mail implementation (iss
      #253).
    * Fixes jdk6, jdk8 and jdk10 releases (iss #250).

version 6.0 (2018-09-02)
    * Adds experimental support for Resource Indicators for OAuth 2.0
      (draft-ietf-oauth-resource-indicators-00).
    * Adds experimental support for OAuth 2.0 Incremental Authorization
      (draft-ietf-oauth-incremental-authz-00).
    * Updates AuthorizationRequest and AuthenticationRequest to support
      multi-valued query parameters (breaking change).
    * Updates the AuthorizationResponse classes to support multi-valued
      parameters (breaking change).
    * Updates TokenRequest to support multi-valued parameters in the request
      body (breaking change).
    * Updates the AuthorizationGrant classes to support multi-valued parameters
      in the request body (breaking change).
    * Updates HTTPRequest to support multi-valued parameters in the query and
      body (breaking change).
    * Switches com.nimbusds.openid.connect.sdk.op.AuthenticationRequestResolver
      to com.nimbusds.jose.util.ResourceRetriever (breaking change).
    * Updates HTTPRequest and HTTPResponse to support multi-valued HTTP headers
      (breaking change) (iss #252).
    * Removes deprecated com.nimbusds.oauth2.sdk.http.Resource class.
    * Removes deprecated com.nimbusds.oauth2.sdk.http.ResourceRetriever
      interface.
    * Removes deprecated
      com.nimbusds.oauth2.sdk.http.RestrictedResourceRetriever interface.
    * Removes deprecated
      com.nimbusds.oauth2.sdk.http.AbstractRestrictedResourceRetriever class.
    * Removes deprecated
      com.nimbusds.oauth2.sdk.http.DefaultResourceRetriever class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.JWKSource interface.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.AbstractJWKSource
      class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.ImmutableJWKSet
      class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.ImmutableClientSecret
      class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.RemoteJWKSet class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.AbstractJWKSelector
      class.
    * Removes deprecated
      com.nimbusds.oauth2.sdk.jose.jwk.JWSVerificationKeySelector class.
    * Removes deprecated
      com.nimbusds.oauth2.sdk.jose.jwk.JWEDecryptionKeySelector class.
    * Removes deprecated com.nimbusds.oauth2.sdk.jose.jwk.KeyConverter class.
    * Removes deprecated
      com.nimbusds.openid.connect.sdk.id.AESBasedPairwiseSubjectCodec class.
    * Upgrades optional OpenSAML dependency to 3.0+ (breaking change for all
      OpenSAML APIs).
    * Updates Nimbus JOSE+JWT to 6.0.1 with Ed25519 and X25519 support.

version 6.0.1 (2018-09-04)
    * Optimises ServletUtils.createHTTPRequest.

version 6.1 (2018-10-22)
    * Adds TokenIntrospectionResponse.toSuccessResponse and toErrorResponse
      helper methods.
    * Updates tests for Nimbus JOSE+JWT 6.1.

version 6.1.1 (2018-10-29)
    * Fixes HTTPRequest.send to properly handle multi-valued headers introduced
      in 6.0 (iss #252).

version 6.2 (2018-11-14)
    * Adds support for Financial-grade API: JWT Secured Authorization Response
      Mode for OAuth 2.0 (JARM), version 2018-11-17. Adds new "query.jwt",
      "fragment.jwt", "form_post.jwt" and "jwt" response_mode constants to the
      ResponseMode class. Extends the AuthorizationServerMetadata classes to
      support advertising of JARM support. Extends the ClientMetadata classes
      to enable registration of JARM parameters. Updates the OAuth 2.0
      AuthorisationResponse classes to support the new "response" parameter for
      JWT-secured responses and their parsing, together with validation. Adds
      new JARMValidator class for validating received OAuth 2.0 authorisation
      responses that are JWT-secured. Adds a new JWTUtils utility class.
    * Adds new static AuthenticationResponseParser.parse(HTTPRequest) method
      for parsing OpenID Connect authentication responses from the a HTTP
      request received at the client redirection (callback) URI. Applies to the
      query, fragment and form_post response modes.
    * Adds new HTTPRequest.getURI method.
    * Removes the self-signed certificate check from the
      ClientAuthenticationVerifier for self_signed_tls_client_auth to enable
      Certificate Authority (CA) signed certificates with registered public key
      (JWK) to pass. Previously only strictly self-signed certificates were
      accepted.
    * Adds X509CertificateUtils.publicKeyMatches(X509Certificate,PublicKey)
      method.

version 6.3 (2018-12-12)
    * Adds new JSONObjectUtils.getJSONObject method accepting default values.
    * Adds new JSONObjectUtils.getStringSet method accepting default values.

version 6.4 (2018-12-15)
    * Adds new JSONObjectUtils.getBoolean method accepting default values.
    * Adds new JSONObjectUtils.getInt method accepting default values.
    * Adds new JSONObjectUtils.getLong method accepting default values.
    * Adds new JSONObjectUtils.getFloat method accepting default values.
    * Adds new JSONObjectUtils.getDouble method accepting default values.
    * Adds new JSONObjectUtils.getNumber method accepting default values.
    * Adds new JSONObjectUtils.getString method accepting default values.
    * Adds new JSONObjectUtils.getEnum method accepting default values.
    * Adds new JSONObjectUtils.getURI method accepting default values.
    * Adds new JSONObjectUtils.getList method accepting default values.
    * Adds new JSONObjectUtils.getStringArray method accepting default values.
    * Adds new JSONObjectUtils.getStringList method accepting default values.

version 6.5 (2018-12-15)
    * Updates the JSONObjectUtils.getXXX with default value to return the
      default value also when a key is found, but its value is null.

version 6.6 (2019-03-19)
    * Adds new com.nimbusds.oauth2.sdk.device package implementing the OAuth
      2.0 Device Authorization Grant (draft-ietf-oauth-device-flow-15).

version 6.6.1 (2019-03-26)
    * Method naming convention fixes in DeviceAuthorizationSuccessResponse.

version 6.7 (2019-03-12)
    * Adds new static IDTokenClaimsSet.parse(net.minidev.json.JSONObject)
      method.

version 6.8 (2019-03-13)
    * Adds new Tokens.toOIDCTokens() method.

version 6.9 (2019-04-23)
    * Adds RequestObjectPOSTRequest, RequestObjectPOSTResponse,
      RequestObjectPOSTSuccessResponse and RequestObjectPOSTErrorResponse for
      dealing with the request object endpoint, as specified in Financial-grade
      API - Part 2: Read and Write API Security Profile, section 7.
    * Adds support for the request_object_endpoint parameter in
      AuthorizationServerMetadata, as defined in Financial-grade API - Part 2:
      Read and Write API Security Profile, section 7.
    * The default value for the AuthorizationServerMetadata field
      request_uri_parameter_supported must be false (whereas it's true for
      OIDCProviderMetadata) (iss #264).
    * Adds new AuthorizationRequest.toJWTClaimsSet() method for returning a
      JSON Web Token (JWT) claims set representation for an OAuth 2.0
      authorisation / OpenID authentication request. Intended for creating
      request objects.
    * Renames TLSClientAuthentication to PKITLSClientAuthentication and
      AbstractTLSClientAuthentication to TLSClientAuthentication.

version 6.10 (2019-05-10)
    * Adds support for The OAuth 2.0 Authorization Framework: JWT Secured
      Authorization Request (JAR) (draft-ietf-oauth-jwsreq-17)
    * Adds new static ResponseMode.resolve method with heuristics to determine
      the requested response mode based on the response_mode and response_type
      parameters.

version 6.11 (2019-05-12)
    * Moves JAR fields from OIDCClientMetadata to ClientMetadata.

version 6.12 (2019-05-13)
    * Moves JAR error codes from OIDCError to OAuth2Error.

version 6.13 (2019-05-15)
    * Adds unmet_authentication_requirements OpenID Connect error code
      specified in OpenID Connect Core Unmet Authentication Requirements 1.0.

version 6.14 (2019-07-18)
    * Updates mTLS support to draft-ietf-oauth-mtls-15.
    * Adds support for new tls_client_auth tls_client_auth_san_dns,
      tls_client_auth_san_uri, tls_client_auth_san_ip and
      tls_client_auth_san_email client metadata parameters.
    * Updates and refactors AuthorizationServerMetadata for
      mtls_endpoint_aliases.
    * Updates PKITLSClientAuthentication to utilise the entire X.509
      certificate.
    * Deprecates ClientX509CertificateBindingVerifier for a new
      PKIClientX509CertificateBindingVerifier interface.
    * Fixes detection of SelfSignedTLSClientAuthentication. Self-signed TLS is
      now chosen with the subject DN matches the root DN. When the PKI method
      is used, the request will have a certificate, but its root DN will be
      null (or at least not equal to the subject DN).

version 6.15 (2019-10-10)
    * Adds "phr" and "phrh" ACR constants from OpenID Connect Extended
      Authentication Profile (EAP) ACR Values 1.0 - draft 00.
    * Adds new static AuthorizationServerMetadata.resolveURL method.
    * Adds new static OIDCProviderMetadata.resolveURL method.
    * Makes the OpenID Connect "prompt" parameter available to plain OAuth 2.0
      requests by pulling it up from AuthenticationRequest to
      AuthorizationRequest.
    * Updates ClaimsRequest to support additional information for a claim.
    * Simplifies ClientAuthentication.parse for self_signed_tls_client_auth to
      not require the issuer DN and subject DN HTTP request metadata / TLS
      headers to be set (iss #272).
    * Bumps Nimbus JOSE+JWT to min 7.9.

version 6.16 (2019-10-10)
    * Pulls client X509Certificate field up to TLSClientAuthentication.

version 6.16.1 (2019-10-11)
    * Reverts behaviour of ClaimsRequest.resolve with custom claims map to
      6.14, custom scope value to claim names expansions always resolved as
      voluntary claims with no additional information (iss #273).

version 6.16.2 (2019-10-12)
    * Fixes ClientAuthentication.parse(HTTPRequest) to return no client
      authentication if a client X.509 certificate is present but no client_id
      parameter. Intended to fix TokenIntrospectionRequest.parse(HTTPRequest)
      with mTLS bearer token as authorisation. Bug introduced in 6.14 (iss
      #274).

version 6.16.3 (2019-10-21)
    * Bumps Nimbus JOSE+JWT to min 8.2 to support ID token "typ" validation
      (iss #275).
    * Fixes BearerAccessToken.parse to not throw ParseException instances with
      messages which include illegal characters according to RFC 6750, section
      3 (iss #276).

version 6.16.4 (2019-10-21)
    * ClientInformationResponse.toHTTPResponse must return HTTP 201 (iss #277).

version 6.16.5 (2019-10-24)
    * Fixes BearerAccessToken.parse(String) to not throw ParseException
      instances with messages which include illegal characters according to RFC
      6750, section 3 (iss #276).

version 6.17 (2019-10-25)
    * Adds support for OAuth 2.0 Pushed Authorization Requests
      (draft-lodderstedt-oauth-par-00), see PushedAuthorizationRequest,
      PushedAuthorizationResponse, PushedAuthorizationSuccessResponse,
      PushedAuthorizationSuccessResponse and
      AuthorizationServerEndpointMetadata classes.
    * Deprecates RequestObjectPOST classes.
    * Updates ErrorObject to support URL-encoded parameters.
    * Adds new AuthenticationRequestDetector utility.

version 6.17.1 (2019-10-27)
    * Updates PushedAuthorizationResponse.parse to treat HTTP status code 200
      as success (in addition to HTTP 201 Created) (iss #279).

version 6.18 (2019-11-03)
    * Updates OAuth 2.0 Pushed Authorization Requests support to
      draft-lodderstedt-oauth-par-01.

version 6.18.1 (2019-11-18)
    * Allow scope=null in access token response (iss #281).

version 6.18.2 (2019-11-30)
    * Adds new parameter to the ClientInformationResponse constructor to
      indicate if the response is for a new client (HTTP status 201) or for a
      retrieved or updated client (HTTP status 200) (iss #282).

version 6.19 (2019-12-04)
    * Updates OIDCProviderMetadata to support OpenID Connect for Identity
      Assurance 1.0 - 08.
    * Adds new DateWithTimeZoneOffset utility class with support for ISO 8601
      formatting and parsing.
    * Adds new SimpleDate utility class with support for ISO 8601 formatting
      and parsing.
    * Adds new secevent.sdk.claims package and TXN claim.
    * Adds new com.nimbusds.openid.connect.sdk.assurance package implementing
      the claims and the verified_claims object from OpenID Connect for
      Identity Assurance 1.0 - 08.
    * Updates UserInfo to support OpenID Connect for Identity Assurance 1.0 -
      08.
    * Factors out a PersonClaims class with common claim getters and setters
      for UserInfo and the claims used in a VerifiedClaimsSet.

version 6.20 (2019-12-04)
    * Adds new IdentityVerification constructor with single evidence.
    * Adds new DateWithTimeZoneOffset constructor with TimeZone argument.

version 6.21 (2019-12-06)
    * Adds support for the OpenID Connect Identity Assurance 1.0 "purpose"
      parameter in AuthenticationRequest.

version 6.21.1 (2019-12-17)
    * Fixes PushedAuthorizationErrorResponse.parse to set the HTTP status code
      in the ErrorObject.

version 6.21.2 (2019-12-17)
    * Renames PAR endpoint getter and setter of
      AuthorizationServerEndpointMetadata to
      {get|set}PushedAuthorizationRequestEndpointURI to fit naming convention
      for endpoints.
    * Deprecates old style request object endpoint getter and setter of
      AuthorizationServerEndpointMetadata.

version 6.22 (2020-01-03)
    * Adds MapUtils.isEmpty utility method.

version 6.23 (2020-01-11)
    * ClaimsRequest supports OpenID Connect eKYC / IdA.
    * Refactors ClaimsRequest.Entry for fluent builder pattern, adds support
      for "purpose" parameter from OpenID Connect eKYC / IdA.

version 7.0 (2020-02-16)
    * Adds new com.nimbusds:content-type:2.0 dependency.
    * Adds new HTTPMessage getEntityContentType, setEntityContentType and
      ensureEntityContentType methods deprecating those that depend on
      javax.mail.internet.ContentType.
    * Makes com.sun.mail:javax.mail optional, use kept only in deprecated API
      calls that depend on it.
    * Deprecates CommonContentTypes and all its constants.
    * Deprecates HTTPMessage.getContentType().
    * Deprecates HTTPMessage.setContentType(javax.mail.internet.ContentType).
    * Deprecates HTTPMessage.ensureContentType().
    * Deprecates HTTPMessage.ensureContentType(javax.mail.internet.ContentType).
    * Fixes LogoutRequest.toHTTPRequest for logout endpoints containing query
      parameters in the URI (iss #285).
    * Cleans up code.

version 7.0.1 (2020-02-21)
    * Fixes LogoutRequest.toURI for logout endpoints containing query
      parameters in the URI (iss 286).

version 7.0.2 (2020-02-21)
    * ClaimsRequest.parse(JSONObject) must not modify the source object (iss
      #287).

version 7.0.3 (2020-02-21)
    * Fixes dependency versions (iss #288, #289).

version 7.1 (2020-02-23)
    * Adds new X509CertificateUtils.generate and generateSelfSigned methods.
    * Adds new TLSUtils utility for creating SSLSocketFactory instances for
      HTTPS requests with a custom key store (for private keys and client X.509
      certificates) and a custom trust store (for server and CA root
      certificates).
    * Upgrades to Nimbus JOSE+JWT 8.8.

version 7.1.1 (2020-02-25)
    * Restores com.sun.mail:javax.mail:1.6.1 as non-optional dependency to
      prevent class loading issues with JSONObjectUtils, HTTPMessage and other
      classes (iss #291).

version 7.1.2 (2021-03-15)
    * Catches unexpected exceptions in JSONUtils.parseJSON(String) into
      ParseException, see
      https://github.com/netplex/json-smart-v1/issues/7 (iss #347).
